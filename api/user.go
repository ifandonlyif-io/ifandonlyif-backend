package api

import (
	"net/http"
	"time"

	db "github.com/ifandonlyif-io/ifandonlyif-backend/db/sqlc"
	_ "github.com/ifandonlyif-io/ifandonlyif-backend/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/labstack/echo/v4"
)

type createUserRequest struct {
	FullName      string `json:"username" binding:"required"`
	WalletAddress string `json:"full_name" binding:"required"`
	CountryCode   string `json:"CountryCode" binding:"required"`
	EmailAddress  string `json:"EmailAddress" binding:"required,email"`
	TwitterName   string `json:"TwitterName" binding:"required"`
	ImageUri      string `json:"ImageUri" binding:"required"`
}

type userResponse struct {
	FullName      string    `json:"full_name"`
	WalletAddress string    `json:"wallet_address"`
	CountryCode   string    `json:"country_code"`
	EmailAddress  string    `json:"email_address"`
	TwitterName   string    `json:"twitter_name"`
	ImageUri      string    `json:"image_uri"`
	CreatedAt     time.Time `json:"created_at"`
}

func newUserResponse(user db.User) userResponse {
	return userResponse{
		FullName:      user.FullName,
		WalletAddress: user.WalletAddress,
		CountryCode:   user.CountryCode,
		EmailAddress:  user.EmailAddress,
		TwitterName:   user.TwitterName,
		ImageUri:      user.ImageUri,
		CreatedAt:     user.CreatedAt,
	}
}

// createUser godoc
// @Summary Create a New User.
// @Description get the CreateUser response of server.
// @Tags createUser
// @Accept */*
// @Produce json
// @Success 200 {object} map[string]interface{}
// @Router /createUser [Post]

func (server *Server) createUser(c echo.Context) error {

	createUser, err := server.store.CreateUser(c.Request().Context(), db.CreateUserParams{
		FullName:      c.FormValue("FullName"),
		WalletAddress: c.FormValue("WalletAddress"),
		CountryCode:   c.FormValue("CountryCode"),
		EmailAddress:  c.FormValue("EmailAddress"),
		TwitterName:   c.FormValue("TwitterName"),
		ImageUri:      c.FormValue("ImageUri"),
	})
	if err != nil {
		return err
	}
	return c.JSON(http.StatusCreated, createUser)
}
